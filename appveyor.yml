environment:
  TWINE_USERNAME: __token__
  # Note: TWINE_PASSWORD is set to an API token in Appveyor settings
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      APPVEYOR_JOB_NAME: "python37-x64-vs2015 pp3"
      CIBW_BUILD: pp3*
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      APPVEYOR_JOB_NAME: "python37-x64-ubuntu cp2"
      CIBW_BUILD: cp2*
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      APPVEYOR_JOB_NAME: "python37-x64-ubuntu cp3"
      CIBW_BUILD: cp3*
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      APPVEYOR_JOB_NAME: "python37-x64-ubuntu pp"
      CIBW_BUILD: pp*
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      APPVEYOR_JOB_NAME: "python37-x64-vs2015 cp2"
      CIBW_BUILD: cp2*
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      APPVEYOR_JOB_NAME: "python37-x64-vs2015 cp3"
      CIBW_BUILD: cp3*
    # Doesn't work, not sure why
    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      #APPVEYOR_JOB_NAME: "python37-x64-vs2015 pp"
      #CIBW_BUILD: pp*
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      APPVEYOR_JOB_NAME: "python37-x64-macos-mojave cp2"
      CIBW_BUILD: cp2*
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      APPVEYOR_JOB_NAME: "python37-x64-macos-mojave cp3"
      CIBW_BUILD: cp3*
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      APPVEYOR_JOB_NAME: "python37-x64-macos-mojave pp"
      CIBW_BUILD: pp*

  CIBW_BEFORE_BUILD_LINUX : "yum remove -y cmake && yum install -y cmake3 libX11-devel libXcursor-devel libXrandr-devel libXinerama-devel mesa-libGL-devel libXi-devel freeglut-devel && ln -sfn /usr/bin/cmake3 /usr/bin/cmake"
  #CIBW_BUILD_VERBOSITY: 3
  #CIBW_TEST_COMMAND: python {project}/test/polyscope_test.py backend=openGL_mock

matrix: 
  fast_finish: true # cancel other jobs once first fails

# Shallow clone
clone_depth: 5

stack: python 3.7

init:
  - cmd: set PATH=C:\Python37;C:\Python37\Scripts;%PATH%

install: 
  - git submodule update --init --recursive
  - python -m pip install cibuildwheel==1.3.0

build_script:
  - python setup.py sdist -d wheelhouse --formats=gztar,zip  # source build (should really be done just once, but oh well)
  - python -m cibuildwheel --output-dir wheelhouse # build ALL the wheels
    #IF "%APPVEYOR_REPO_TAG%" == "true"
    #IF "%APPVEYOR_REPO_TAG%" == $(setup.py --version)


#deploy:
  #- >
    #IF "true" == "true"
    #(
    #python -m pip install twine
    #&&
    #python -m twine upload wheelhouse/*.whl
    #python -m twine upload wheelhouse/*.tar.gz
    #python -m twine upload wheelhouse/*.zip
    #)

artifacts:
  #- path: "wheelhouse\\*.whl"
  - path: "wheelhouse\\*"
    name: Wheels

